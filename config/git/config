[user]
    name = Matthew Grossman
    email = matthewryangrossman@gmail.com
[alias]
    branch-name = rev-parse --abbrev-ref HEAD
    last-commit = log -1 --pretty=%B

    p = push
    b = "!git branch --sort=committerdate | awk '/^[^*]/ {print $1}'"
    fm = pull
    co = checkout
    dm = "!git diff $(git default-branch)"
    cm = "!git checkout $(git default-branch)"
    c = commit
    ca = commit --all
    a = add
    rv = revert
    rs = reset
    d = diff --no-ext-diff
    s = status
    m = merge
    l = log
    lo = log --oneline -5
    ld = log --stat --patch --full-diff
    mm = "!git merge $(git default-branch)"
    giff = diff

    default-branch = "!git symbolic-ref refs/remotes/origin/HEAD | sed 's|^refs/remotes/origin/||'"
    pr-name = "!echo \"$(git ticket-prefix)\"\"$(git last-commit)\""
    msg = "!tpl=\"$(cat pull_request_template.md 2>/dev/null)\";echo \"$(git pr-name)\\n\\n$tpl\""
    pm = "!git checkout $(git default-branch) && git pull && git checkout - && git merge $(git default-branch) --no-edit"
    bc = "!git checkout $(git default-branch) && git pull && git checkout -b"
    pr = "!git push && gh pr create --base $(git parent) --fill --web"
    prinfo = "!f() { gh pr list --state all --json url,state --head $1 | jq '.[]'; }; f"
    clo = "!gh repo clone"
    scratch = "!git ls-files --other --exclude-standard | xargs -I{} mv {} scratch/"
    comment = "!gh pr comment -b"
    ptal = "!f() { gh pr comment -b \"ptal $1\"; }; f"
    offload = "!gh pr comment -b '/offload'"

    # experimenting with setting branch parents in metadata
    set-parent = "!git config branch.$(git branch-name).parent"
    add-child = "!git config --add branch.$(git branch-name).child"
    get-children = "!git config --get-all branch.$(git branch-name).child"
    parent-pr = "!git prinfo $(git parent)"
    update-parent = "!f() { status=$(git parent-pr | jq '.[\"state\"]']); par=$(git branch-name); git checkout -b $1; git set-parent $par; }; f"
    parent = "!git config --get branch.$(git branch-name).parent || git default-branch"
    pp = "!git checkout $(git parent) && git pull && git checkout - && git merge $(git parent) --no-edit"
    bp = "!f() { par=$(git branch-name); git add-child $1; git checkout -b $1; git set-parent $par; }; f"
[core]
    excludesfile = ~/.config/git/gitignore_global
[pull]
    rebase = false
[push]
    default = current
[submodule]
	recurse = true
[init]
	defaultBranch = main
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[merge]
    mergestyle = zdiff3
    conflictstyle = zdiff3

[url "git@github.com:"]
	insteadOf = "https://github.com/"
[core]
    pager = delta

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true    # use n and N to move between diff sections

[diff]
    colorMoved = default
	submodule = log
[status]
	submoduleSummary = true
